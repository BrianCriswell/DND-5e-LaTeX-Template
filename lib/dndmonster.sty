\ExplSyntaxOn

% Dice macro
\regex_new:N \l__valid_dice_regex
\regex_set:Nn \l__valid_dice_regex { \A\s*(\d+)(?:[dD](\d+)\s*(?:([+-])\s*(\d+))?)?\s*\Z } % Matches { # | #d# | #d# + # | #d# - # } while ignoring spaces
\seq_new:N \l__dice_args_seq
\tl_new:N \l__dice_number_tl
\tl_new:N \l__dice_sides_tl
\tl_new:N \l__dice_mod_sign_tl
\tl_new:N \l__dice_mod_tl
\msg_new:nnn { dnd } { dice / invalid_argument } { Invalid~argument~``#1''~passed~to~\noexpand\DndDice. }

\NewDocumentCommand { \DndDice } { m }
  {
    \group_begin:
      \regex_extract_once:NnNTF { \l__valid_dice_regex } { #1 } \l__dice_args_seq
        {          
          \seq_pop_left:NN \l__dice_args_seq \l_tmpa_str % Don't need the full match
          \seq_pop_left:NN \l__dice_args_seq \l__dice_number_tl % # of dice
          \seq_pop_left:NN \l__dice_args_seq \l__dice_sides_tl % # of sides
          \seq_pop_left:NN \l__dice_args_seq \l__dice_mod_sign_tl % +/- for add/sub
          \seq_pop_left:NN \l__dice_args_seq \l__dice_mod_tl % modifier
          
          \str_if_empty:NTF { \l__dice_sides_tl } % are there dice ?
            { \l__dice_number_tl } % No, just a number
            { %Yes, break down the roll
              \fp_eval:n { floor ( \l__dice_number_tl * ( \l__dice_sides_tl + 1 ) / 2 )\l__dice_mod_sign_tl \l__dice_mod_tl }~
              
              (
                \l__dice_number_tl d \l__dice_sides_tl

                \str_case_e:nn { \l__dice_mod_sign_tl }
                  {
                    { + } { ~\(+\)~\l__dice_mod_tl }
                    { - } { ~\(-\)~\l__dice_mod_tl }
                  }
              )
            }
        }
        { \msg_error:nnn { dnd } { dice / invalid_argument } { #1 }}
    \group_end:
  }

% Monster box made to look like the Monster Manual NPC definitions
\newtcolorbox{ DndMonsterNoBg } [2][]
  {
    enhanced,
    frame~hidden,
    boxrule=0pt,
    breakable,
    boxsep=0pt,
    toptitle=3mm,
    left=0pt,
    right=0pt,
    sharp~corners,
    opacityback=0,
    colframe=titlered,
    fonttitle=\dnd@StatBlockTitleFont\Large,
    fontupper=\dnd@StatBlockBodyFont,
    fontlower=\dnd@StatBlockBodyFont,
    title=#2,
    coltitle=titlered,
    #1
  }

% Stat block made to look like stat blocks in the PHB.
\newtcolorbox{ DndMonsterBg } [2][]
  {
    enhanced,
    frame~hidden,
    before~skip=7pt plus 2pt,
    boxrule=0pt,
    breakable,
    boxsep=0pt,
    toptitle=11pt,
    left=7pt,
    right=7pt,
    bottom=11pt,
    sharp~corners,
    oversize=0pt,
    borderline~north={4pt}{0pt}{titlered},
    borderline~north={2.5pt}{0.75pt}{statblockribbon},
    borderline~south={4pt}{0pt}{titlered},
    borderline~south={2.5pt}{0.75pt}{statblockribbon},
    colback=statblockbg,
    colbacktitle=statblockbg,
    colframe=titlered,
    fonttitle=\dnd@StatBlockTitleFont\Large,
    coltitle=titlered,
    fontupper=\dnd@StatBlockBodyFont,
    fontlower=\dnd@StatBlockBodyFont,
    title=#2,
    #1
  }

\iftoggle { bool-bg }
  {
    \let\DndMonster\DndMonsterBg
    \let\endDndMonster\endDndMonsterBg
    \let\monsterbox\monsterboxbg
    \let\endmonsterbox\endmonsterboxbg
  }{
    \let\DndMonster\DndMonsterNoBg
    \let\endDndMonster\endDndMonsterNoBg
    \let\monsterbox\monsterboxnobg
    \let\endmonsterbox\endmonsterboxnobg
  }

\NewDocumentCommand { \DndMonsterType } { m }
  {
    \begin{hangingpar}
      \textit{ #1 }
    \end{hangingpar}
  }

% Fancy DnD 5e stat block rule
\NewDocumentCommand { \DndMonsterLine } {}
  {
    \begin{tikzpicture}
      \draw [ rulered, fill=rulered ] (0, 0) -- (0,0.1) -- (\linewidth, 0.05);
    \end{tikzpicture}
    \par
  }

%% Monster list helpers
\box_new:N \l__dnd_space_box
\hbox_set:Nn \l__dnd_space_box { ~ }
\dim_new:N \l__dnd_space_dim
\dim_set:Nn \l__dnd_space_dim { \box_wd:N \l__dnd_space_box }

% A description variant used to list creature attributes.
\newlist { dnd@monsterattrs } { description } { 1 }
\setlist [ dnd@monsterattrs ]
  {
    before   = \color{ titlered },
    font     = \dnd@StatBlockBodyFont\textbf,
    labelsep = \l__dnd_space_dim,
    noitemsep,
    nosep,
  }

% Only prints the item label if the value was supplied
\cs_new_protected_nopar:Npn \__dnd_if_monster_attribute:nn #1#2
  {
    \tl_if_empty:NF { #1 }
    { \item [ #2 ] #1 }
  }

%% Monster basics
\keys_define:nn { dnd / monster / basics }
  {
    armor-class .tl_set:N          = \l__armor_class_tl,
    armor-class .initial:n         = 10,
    armor-class .value_required:n  = true,
    armorclass .meta:n = { armor-class = { #1 } },
    hit-points .tl_set:N         = \l__hit_points_tl,
    hit-points .initial:n        = \dice{1d4},
    hit-points .value_required:n = true,
    hitpoints .meta:n = { hit-points = { #1 } },
    speed .tl_set:N         = \l__speed_tl,
    speed .initial:n        = 30~\ftname,
    speed .value_required:n = true,
  }

\cs_new_protected_nopar:Npn \__dnd_monster_basics:
  {
      \begin{dnd@monsterattrs}
        \item [ \armorclassname ] \l__armor_class_tl
        \item [ \hitpointsname ] \l__hit_points_tl
        \item [ \speedname ] \l__speed_tl
      \end{dnd@monsterattrs}
  }

\NewDocumentCommand {\DndMonsterBasics} { o }
  {
    \group_begin:
      \keys_set:nn { dnd / monster / basics } { #1 }
      \DndMonsterLine
      \__dnd_monster_basics:
      \DndMonsterLine
    \group_end:
  }

%% Monster details
\keys_define:nn { dnd / monster / details }
{
  saving-throws .tl_set:N         = \l__saving_throws_tl,
  saving-throws .value_required:n = true,
  savingthrows .meta:n = { saving-throws = { #1 } },
  skills .tl_set:N         = \l__skills_tl,
  skills .value_required:n = true,
  damage-vulnerabilities .tl_set:N         = \l__damage_vulnerabilities_tl,
  damage-vulnerabilities .value_required:n = true,
  damagevulnerabilities .meta:n = { damage-vulnerabilities = { #1 } },
  damage-resistances .tl_set:N         = \l__damage_resistances_tl,
  damage-resistances .value_required:n = true,
  damageresistances .meta:n = { damage-resistances = { #1 } },
  damage-immunities .tl_set:N         = \l__damage_immunities_tl,
  damage-immunities .value_required:n = true,
  damageimmunities .meta:n = { damage-immunities = { #1 } },
  condition-immunities .tl_set:N         = \l__condition_immunities_tl,
  condition-immunities .value_required:n = true,
  conditionimmunities .meta:n = { condition-immunities = { #1 } },
  senses .tl_set:N         = \l__senses_tl,
  senses .initial:n        = \defaultsensesname,
  senses .value_required:n = true,
  languages .tl_set:N         = \l__languages_tl,
  languages .initial:n        = ---,
  languages .value_required:n = true,
  challenge .tl_set:N         = \l__challenge_tl,
  challenge .initial:n        = 1,
  challenge .value_required:n = true,
}

\cs_new_protected_nopar:Npn \__dnd_monster_details:
{
    \begin{dnd@monsterattrs}
      \__dnd_if_monster_attribute:nn { \l__saving_throws_tl } { \savesname }
      \__dnd_if_monster_attribute:nn { \l__skills_tl } { \skillsname }
      \__dnd_if_monster_attribute:nn { \l__damage_vulnerabilities_tl } { \dvulname }
      \__dnd_if_monster_attribute:nn { \l__damage_resistances_tl } { \dresname }
      \__dnd_if_monster_attribute:nn { \l__damage_immunities_tl } { \dimmname }
      \__dnd_if_monster_attribute:nn { \l__condition_immunities_tl } { \cimmname }
      \item [ \sensesname ] \l__senses_tl
      \item [ \languagesname ] \l__languages_tl
      \item [ \challengename ] \__dnd_cr_xp:N { \l__challenge_tl }
    \end{dnd@monsterattrs}
}

\NewDocumentCommand {\DndMonsterDetails} { o }
{
  \group_begin:
    \keys_set:nn { dnd / monster / details } { #1 }
    \DndMonsterLine{}
    \__dnd_monster_details:
    \DndMonsterLine{}
  \group_end:
}

%% Ability scores
\int_new:N \l__ability_modifier_int

% Print ability score stats with autocomputed modifier
% e.g. \stat{12} prints "12 (+1)"
\cs_new_protected_nopar:Npn \__dnd_ability_score_modifier:N #1
  {
    \group_begin:
      \IfInteger { #1 }
        {
          \int_set:Nn \l__ability_modifier_int { \fp_eval:n { floor ( (#1 - 10) / 2) } }
          
          #1 ~ (
          \int_compare:nNnTF { \l__ability_modifier_int } < { 0 }
          { \(-\) }
          { + }
          \int_abs:n \l__ability_modifier_int )
        }
        { #1 }
    \group_end:
  }

\keys_define:nn { dnd / monster / ability_scores }
  {
    str .tl_set:N         = \l__str_tl,
    str .initial:n        = 10,
    str .value_required:n = true,
    STR .meta:n = { str = #1 },
    dex .tl_set:N         = \l__dex_tl,
    dex .initial:n        = 10,
    dex .value_required:n = true,
    DEX .meta:n = { dex = #1 },
    con .tl_set:N         = \l__con_tl,
    con .initial:n        = 10,
    con .value_required:n = true,
    CON .meta:n = { con = #1 },
    int .tl_set:N         = \l__int_tl,
    int .initial:n        = 10,
    int .value_required:n = true,
    INT .meta:n = { int = #1 },
    wis .tl_set:N         = \l__wis_tl,
    wis .initial:n        = 10,
    wis .value_required:n = true,
    WIS .meta:n = { wis = #1 },
    cha .tl_set:N         = \l__cha_tl,
    cha .initial:n        = 10,
    cha .value_required:n = true,
    CHA .meta:n = { cha = #1 },
  }

% Ability scores in a table
\cs_new_protected_nopar:Npn \__dnd_monster_ability_scores:
  {
    \small\centering\color{titlered}
    \resizebox{\linewidth}{\height}
      {
        \begin{tabular}{cccccc}
          \rule{0pt}{3.7mm} % adds space between hline and table
          \textbf { \strstatname } &
          \textbf { \dexstatname } &
          \textbf { \constatname } &
          \textbf { \intstatname } &
          \textbf { \wisstatname } &
          \textbf { \chastatname } \\
          \__dnd_ability_score_modifier:N { \l__str_tl } &
          \__dnd_ability_score_modifier:N { \l__dex_tl } &
          \__dnd_ability_score_modifier:N { \l__con_tl } &
          \__dnd_ability_score_modifier:N { \l__int_tl } &
          \__dnd_ability_score_modifier:N { \l__wis_tl } &
          \__dnd_ability_score_modifier:N { \l__cha_tl }
        \end{tabular}
      }
    \\[0.4em] %adds space after table
}

\NewDocumentCommand {\DndMonsterAbilityScores} { o }
  {
    \group_begin:
      \keys_set:nn { dnd / monster / ability_scores } { #1 }
      \__dnd_monster_ability_scores:
    \group_end:
  }

% Wrapper for monster actions  
\NewDocumentEnvironment {DndMonsterAction} { m }
{ \smallskip\emph{ \textbf{ #1.} } }
{ \par }


% Monster subsection header style
\NewDocumentCommand { \DndMonsterSection } { m }
  {
    \group_begin:
      \medskip
      \color{titlered} \dnd@StatBlockSubtitleFont \large #1
      % \rule is a horizontal command, so placing it under the title incurs extra
      % line spacing. Use \hrule (a vertical command) instead.
      \vspace{3pt}
      \hrule height 0.6pt
      \vspace{3pt plus 3 pt}
    \group_end:
  }

% Spellcasting levels
\NewDocumentCommand { \DndInnateSpellLevel } { O { \innateatwillname } m }
  {
    \smallskip
    \begin{hangingpar}
      \IfInteger { #1 }
      {
        \str_if_in:NnTF { #2 } { , }
        { \numberperdayeachname{ #1 } }
        { \numberperdayname { #1 } }
      }
      {#1}
      :~\DndEmphSpellString { #2 }
    \end{hangingpar}
  }

\NewDocumentCommand {\DndMonsterSpellLevel} { O{\spellcantripsname} O{\spellatwillname} m }
  {
    \smallskip
    \begin{hangingpar}
    \str_case_e:nnF {#1}
      {
        { 1 } { \spellfirstlevelname }
        { 2 } { \spellsecondlevelname }
        { 3 } { \spellthirdlevelname }
        { 4 } { \spellfourthlevelname }
        { 5 } { \spellfifthlevelname }
        { 6 } { \spellsixthlevelname }
        { 7 } { \spellseventhlevelname }
        { 8 } { \spelleighthlevelname }
        { 9 } { \spellninthlevelname }
      }
      { #1 }
    {~}(
    \str_case_e:nnF {#2}
      {
        { 1 } { \spelloneslotname }
        { 2 } { \spelltwoslotsname }
        { 3 } { \spellthreeslotsname }
        { 4 } { \spellfourslotsname }
      }
      { #2 }
    ):~\DndEmphSpellString{ #3 }
    \end{hangingpar}
  }

\NewDocumentCommand {\DndEmphSpellString} { >{\SplitList{,}}m }
  {
    \int_zero_new:N \l_spellstring_int
    \tl_map_function:nN {#1} \__dnd_spell_list_mapping:n
  }

\cs_new:Nn \__dnd_spell_list_mapping:n
  {
    \int_compare:nNnTF
      {\l_spellstring_int} = {0}
      {\int_incr:N \l_spellstring_int}
      {,~}
    
    \emph {#1}
  }

%% Monster attacks
\tl_new:N \l__attack_type_tl

\keys_define:nn { dnd / monster / attack }
  {
    name .tl_set:N         = \l__name_tl,
    name .initial:n        = Dagger,
    name .value_required:n = true,
    type .choice:,
    type .choices:nn =
      { both, melee, ranged }
      { \tl_set:Nn \l__attack_type_tl { \l_keys_choice_tl } },
    type .default:n  = both,
    mod .tl_set:N         = \l__mod_tl,
    mod .initial:n        = +0,
    mod .value_required:n = true,
    reach .tl_set:N         = \l__reach_tl,
    reach .initial:n        = 5,
    reach .value_required:n = true,
    range .tl_set:N         = \l__range_tl,
    range .initial:n        = 20/60,
    range .value_required:n = true,
    targets .tl_set:N         = \l__targets_tl,
    targets .initial:n        = \defaulttargetsname,
    targets .value_required:n = true,
    dmg .tl_set:N         = \l__dmg_tl,
    dmg .initial:n        = \dice{1d4},
    dmg .value_required:n = true,
    dmg-type .tl_set:N         = \l__dmg_type_tl,
    dmg-type .initial:n        = piercing,
    dmg-type .value_required:n = true,
    plus-dmg .tl_set:N         = \l__plus_dmg_tl,
    plus-dmg .value_required:n = true,
    plus-dmg-type .tl_set:N         = \l__plus_dmg_type_tl,
    plus-dmg-type .value_required:n = true,
    or-dmg .tl_set:N         = \l__or_dmg_tl,
    or-dmg .value_required:n = true,
    or-dmg-when .tl_set:N         = \l__or_dmg_when_tl,
    or-dmg-when .value_required:n = true,
    extra .tl_set:N         = \l__extra_tl,
    extra .value_required:n = true,
  }

\cs_new_protected:Npn \__dnd_if_plus_dmg:
  {    
    \tl_if_empty:NF { \l__plus_dmg_tl }
    { ~ \plusname\ \l__plus_dmg_tl\ \l__plus_dmg_type_tl\ \damagename }
  }

  \cs_new_protected_nopar:Npn \__dnd_if_or_dmg:
  {
    \tl_if_empty:NF { \l__plus_dmg_tl }
    { , ~ \orname\ \l__or_dmg_tl\ \l__dmg_type_tl\ \damagename\__dnd_if_plus_dmg:\ \l__or_dmg_when_tl }
  }

\cs_new_protected:Npn \__dnd_monster_attack:
  {
    \begin{DndMonsterAction} { \l__name_tl }~
      \str_case_e:nnF { \l__attack_type_tl }
        {
          { melee }
            { \textit{ \meleeattackname : } ~ \l__mod_tl\ \tohitname, ~ \reachname\ \l__reach_tl ~ \ftname }
          { ranged }
            { \textit{ \rangedattackname : } ~ \l__mod_tl\ \tohitname, ~ \rangename\ \l__range_tl ~ \ftname }
        }
        {% Melee and Ranged
          \textit{ \meleeorrangedattackname : } ~ \l__mod_tl\ \tohitname, ~ \reachname\ \l__reach_tl ~ \ftname\ \orname\ \rangename\ \l__range_tl ~ \ftname
        }
      , ~ \l__targets_tl. ~
      \textit { \hitname : } ~ \l__dmg_tl\ \l__dmg_type_tl\ \damagename
      \__dnd_if_plus_dmg:
      \__dnd_if_or_dmg:
      \l__extra_tl.
    \end{DndMonsterAction}
  }

\NewDocumentCommand { \DndMonsterAttack } { o }
  {
    \group_begin:
      \keys_set:nn { dnd / monster / attack } { #1 }
      \__dnd_monster_attack:
    \group_end:
  }

\NewDocumentCommand { \DndMonsterMelee } { o }
  {
    \group_begin:
      \keys_set:nn { dnd / monster / attack } { #1, type = melee }
      \__dnd_monster_attack:
    \group_end:
  }

\NewDocumentCommand { \DndMonsterRanged } { o }
  {
    \group_begin:
      \keys_set:nn { dnd / monster / attack } { #1, type = ranged }
      \__dnd_monster_attack:
    \group_end:
  }

%% Monster CR/XP helper
\cs_new_protected_nopar:Npn \__dnd_cr_xp:N #1
  {
    \str_case_e:nnF { #1 }
      {
        { 0 }   { #1~(0~\xpname) }
        { 1/10 }{ 0~(10~\xpname) }
        { 1/8 } { #1~(25~\xpname) }
        { 1/4 } { #1~(50~\xpname) }
        { 1/2 } { #1~(100~\xpname) }
        { 1 }   { #1~(200~\xpname) }
        { 2 }   { #1~(450~\xpname) }
        { 3 }   { #1~(700~\xpname) }
        { 4 }   { #1~(\numprint{1100}~\xpname) }
        { 5 }   { #1~(\numprint{1800}~\xpname) }
        { 6 }   { #1~(\numprint{2300}~\xpname) }
        { 7 }   { #1~(\numprint{2900}~\xpname) }
        { 8 }   { #1~(\numprint{3900}~\xpname) }
        { 9 }   { #1~(\numprint{5000}~\xpname) }
        { 10 }  { #1~(\numprint{5900}~\xpname) }
        { 11 }  { #1~(\numprint{7200}~\xpname) }
        { 12 }  { #1~(\numprint{8400}~\xpname) }
        { 13 }  { #1~(\numprint{10000}~\xpname) }
        { 14 }  { #1~(\numprint{11500}~\xpname) }
        { 15 }  { #1~(\numprint{13000}~\xpname) }
        { 16 }  { #1~(\numprint{15000}~\xpname) }
        { 17 }  { #1~(\numprint{18000}~\xpname) }
        { 18 }  { #1~(\numprint{20000}~\xpname) }
        { 19 }  { #1~(\numprint{22000}~\xpname) }
        { 20 }  { #1~(\numprint{25000}~\xpname) }
        { 21 }  { #1~(\numprint{33000}~\xpname) }
        { 22 }  { #1~(\numprint{41000}~\xpname) }
        { 23 }  { #1~(\numprint{50000}~\xpname) }
        { 24 }  { #1~(\numprint{62000}~\xpname) }
        { 25 }  { #1~(\numprint{75000}~\xpname) }
        { 26 }  { #1~(\numprint{90000}~\xpname) }
        { 27 }  { #1~(\numprint{105000}~\xpname) }
        { 28 }  { #1~(\numprint{120000}~\xpname) }
        { 29 }  { #1~(\numprint{135000}~\xpname) }
        { 30 }  { #1~(\numprint{155000}~\xpname) }
      }
      { #1 }
}

\NewDocumentCommand { \DndMonsterLegendaryAction } { m m }
  {
    \smallskip
    \begin{hangingpar}
      \textbf{#1.}~#2
    \end{hangingpar}
  }

\NewDocumentEnvironment { DndMonsterDescription } {}
  { \bigskip\noindent\ignorespaces }
  {}

% Deprecated
\NewDocumentCommand { \dice } { m }
  {
    \dnd@deprecate{\noexpand\dice}{0.8}[Use \noexpand\DndDice.]
    \DndDice { #1 }
  }

\let\oldhline\hline

\renewcommand{\hline}
  {
    \dnd@deprecate{\noexpand\hline~/~\noexpand\dndline}{0.8}[Use~\noexpand\DndMonsterLine~for~stat~block~rules.~You~can~access~the~normal~tabular~\noexpand\hline~through~\noexpand\oldhline~until~this~is~removed.]
    \DndMonsterLine
  }

  \let\dndline\hline

\NewDocumentEnvironment { monsterbox } { O { enhanced } m }
  {
    \dnd@deprecate{\noexpand\monsterbox}{0.8}[Use \noexpand\DndMonster.]
    \begin{DndMonster} [ #1 ] { #2 }
  }
  { \end{DndMonster} }

\NewDocumentEnvironment { monsterboxbg } { O { enhanced } m }
  {
    \dnd@deprecate{\noexpand\monsterbox}{0.8}[Use \noexpand\DndMonsterBg.]
    \begin{DndMonsterBg} [ #1 ] { #2 } }
  { \end{DndMonsterBg} }

\NewDocumentEnvironment { monsterboxnobg } { O { enhanced } m }
  {
    \dnd@deprecate{\noexpand\monsterbox}{0.8}[Use \noexpand\DndMonsterNoBg.]
    \begin{DndMonsterNoBg} [ #1 ] { #2 } }
  { \end{DndMonsterNoBg} }

\NewDocumentCommand { \basics } { o }
  {
    \dnd@deprecate {\noexpand\basics} {0.8} [Use \noexpand\DndMonsterBasics]
    \group_begin:
      \keys_set:nn { dnd / monster / basics } { #1 }
      \__dnd_monster_basics:
    \group_end:
  }

\NewDocumentCommand { \details } { o }
  {
    \dnd@deprecate {\noexpand\details} {0.8} [Use \noexpand\DndMonsterDetails]
    \group_begin:
      \keys_set:nn { dnd / monster / details } { #1 }
      \__dnd_monster_details:
    \group_end:
  }

\NewDocumentCommand { \stat } { m }
  {
    \dnd@deprecate{\noexpand\stat}{0.8}[Use \noexpand\DndMonsterAbilityScores~with~ ~just~the~numbers~instead.]
    \__dnd_ability_score_modifier:N { #1 }
  }

\newkeycommand\stats
  [
    STR=\stat{10},
    DEX=\stat{10},
    CON=\stat{10},
    INT=\stat{10},
    WIS=\stat{10},
    CHA=\stat{10}
  ]{
    \dnd@deprecate{\noexpand\stats}{0.8}[Use \noexpand\DndMonsterAbilityScores~with~ ~just~the~numbers~instead.]
    \DndMonsterAbilityScores
      [
        str = \commandkey{STR},
        dex = \commandkey{DEX},
        con = \commandkey{CON},
        int = \commandkey{INT},
        wis = \commandkey{WIS},
        cha = \commandkey{CHA}
      ]
}

\NewDocumentEnvironment {monsteraction }{ o }
  {
    \dnd@deprecate {\noexpand\monsteraction [action]} {0.8} [Use \noexpand\DndMonsterAction {action}]%
    \IfValueTF{#1}
      { \smallskip\emph{ \textbf{ #1. } } }
      { \unskip }
  }
  {\par}

\NewDocumentCommand { \monstersection } { m }
  {    
    \dnd@deprecate {\noexpand\monstersection} {0.8} [Use \noexpand\DndMonsterSection]%
    \begingroup
    \par\medskip\color{titlered}
    \dnd@StatBlockSubtitleFont\large #1
    % \rule is a horizontal command, so placing it under the title incurs extra
    % line spacing. Use \hrule (a vertical command) instead.
    \vspace{3pt}
    \noindent\hrule height 0.6pt
    \vspace{3pt}
    \endgroup
  }

\ExplSyntaxOff